set_progress(0.0);
ui_print("@Starting the install process");
set_progress(0.1);
ui_print("Copying tools to /tmp");
package_extract_dir("tools", "/tmp");
set_perm(0, 0, 0755, "/tmp/busybox");
ui_print("Copying system files to /tmp");
package_extract_dir("system", "/tmp/system");
set_progress(0.2);
ui_print("Mounting /data");
run_program("/tmp/busybox", "mount", "/data");
ui_print("Mounting /system");
run_program("/tmp/busybox", "mount", "/system");
set_progress(0.3);
ui_print("Mounting /sdcard");
run_program("/tmp/busybox", "mount", "/sdcard");
set_progress(0.4);
set_perm(0, 0, 0755, "/tmp/previnstall.sh");
run_program("/tmp/previnstall.sh");
ui_print("@Installing Apps");
if (file_getprop("/tmp/aroma/app_choices.prop", "item.1.2")=="1") then ui_print("Installing Nethunter");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/nethunter.apk", "/data/app/nethunter.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.1.3")=="1") then ui_print("Installing Custom Nethunter Jackpal Terminal");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/Term-nh.apk", "/data/app/Term-nh.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.1.4")=="1") then ui_print("Installing Custom Nethunter VNC");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/VNC-nh.apk", "/data/app/VNC-nh.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.1")=="1") then ui_print("Installing BlueNMEA-2.1.3");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/BlueNMEA.apk", "/data/app/BlueNMEA.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.2")=="1") then ui_print("Installing Drivedroid-0.9.29");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/Drivedroid.apk", "/data/app/Drivedroid.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.3")=="1") then ui_print("Installing Hackerskeyboard-1.0.3.7");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/Hackerskeyboard.apk", "/data/app/Hackerskeyboard.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.4")=="1") then ui_print("Installing RFAnalyzer");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/RFAnalyzer.apk", "/data/app/RFAnalyzer.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.5")=="1") then ui_print("Installing Shodan");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/Shodan.apk", "/data/app/Shodan.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.6")=="1") then ui_print("Installing USBKeyboard");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/USBKeyboard.apk", "/data/app/USBKeyboard.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.7")=="1") then ui_print("Installing cSploit Nightly");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/cSploit-nightly.apk", "/data/app/cSploit-nightly.apk");
endif;
if (file_getprop("/tmp/aroma/app_choices.prop", "item.2.8")=="1") then ui_print("Installing RouterKeygen");
run_program("/tmp/busybox", "mount", "/data");
package_extract_file("data/app/RouterKeygen.apk", "/data/app/RouterKeygen.apk");
endif;

set_progress(0.5);
ui_print("@Freeing some space on /system");
run_program("/tmp/busybox", "mount", "/system");
set_perm(0, 0, 0755, "/tmp/cleansystem.sh");
run_program("/tmp/busybox", "ash", "/tmp/cleansystem.sh");
unmount("/system");

if
   file_getprop("/tmp/aroma/mods.prop","item.0.1") == "1"
     then
   ui_print("@Installing nano binary");
   run_program("/tmp/busybox", "mount", "/system");
   set_perm(0, 0, 0755, "/tmp/installnano.sh");
   run_program("/tmp/installnano.sh");
endif;
if
   file_getprop("/tmp/aroma/mods.prop","item.0.2") == "1"
     then
   ui_print("@Installing Nethunter wallpapers");
   run_program("/tmp/busybox", "mount", "/data");
   package_extract_dir("wallpaper", "/tmp/wallpaper");
   set_perm(0, 0, 0755, "/tmp/wallpaper/setwallpaper.sh");
   run_program("/tmp/wallpaper/setwallpaper.sh");
   unmount("/data");
endif;
if
   file_getprop("/tmp/aroma/mods.prop","item.0.3") == "1"
     then
   ui_print("@Installing Custom Boot Animation");
   run_program("/tmp/busybox", "mount", "/system");
   package_extract_file("system/media/bootanimation.zip", "/system/media/bootanimation.zip");
   set_perm(0, 0, 0755, "/system/media/bootanimation.zip");
   unmount("/system");
endif;
if
   file_getprop("/tmp/aroma/mods.prop","item.0.4") == "1"
     then
   ui_print("@Installing Proxdroid");
   run_program("/tmp/busybox", "mount", "/system");
   run_program("/tmp/busybox", "mount", "/data");
   set_perm(0, 0, 0755, "/tmp/symlinkproxmark3.sh");
   run_program("/tmp/symlinkproxmark3.sh");
endif;

set_progress(0.6);
ui_print("@Checking for busybox");
run_program("/tmp/busybox", "mount", "/system");
set_perm(0, 0, 0755, "/tmp/busyboxcheck.sh");
run_program("/tmp/busyboxcheck.sh");

set_progress(0.7);
ui_print("@Symlink bootkali");
symlink("/data/data/com.offsec.nethunter/files/scripts/bootkali", "/system/bin/bootkali");
symlink("/data/data/com.offsec.nethunter/files/scripts/bootkali_login", "/system/bin/bootkali_login");
symlink("/data/data/com.offsec.nethunter/files/scripts/bootkali_bash", "/system/bin/bootkali_bash");

ui_print("@Installing Kernel using AnyKernel2");
package_extract_dir("anykernelzip", "/tmp/anykernel");
run_program("/tmp/busybox", "unzip", "-o", "/tmp/anykernel/anykernel2.zip", "-d", "/tmp/anykernel");
run_program("/tmp/busybox", "ash", "/tmp/anykernel/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/anykernel/anykernel2.zip");

set_progress(0.8);
if (file_getprop("/tmp/aroma/app_choices.prop", "item.1.1")=="1") then ui_print("Installing SuperSU");
package_extract_dir("supersu", "/tmp/supersu");
ui_print("SuperSU may lock Aroma installation display");
ui_print("Installation will still continue.  Turn off/on in a minute.");
run_program("/tmp/busybox", "unzip", "-o", "/tmp/supersu/supersu.zip", "-d", "/tmp/supersu");
run_program("/tmp/busybox", "ash", "/tmp/supersu/META-INF/com/google/android/update-binary", "dummy", "1", "/tmp/supersu/supersu.zip");
endif;

set_progress(0.9);
ui_print("@Checking for Kali Chroot in installer...this can take a while...");
package_extract_dir("data/local", "/data/local");
set_perm(0, 0, 0755, "/tmp/extractchroot.sh");
run_program("/tmp/extractchroot.sh");

unmount("/data");
unmount("/system");
delete_recursive("/tmp");
ui_print("@Finished Install");
set_progress(1);